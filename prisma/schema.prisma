
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  email String @unique
  password String 

  isVerified Boolean @default(false) @map("is_verified")

  role Role @default(USER)

  orders Order[]
  favorites Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model Product {
  id String @id @default(uuid())

  name String @unique
  slug String @unique
  description String
  price Int 
  image String

  category Category @relation(fields: [categoryId], references: [id])
  categoryId String

  User User[]
  OrderItem OrderItem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("products")
}

model Category {
  id String @id @default(uuid())

  name String @unique
  slug String @unique
  image String 

  products Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("categories")
}

model Order {
  id String @id @default(uuid())

  total Int

  user User @relation(fields: [userId], references: [id])
  userId String

  OrderItem OrderItem[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("orders")
}

model OrderItem {
  id String @id @default(uuid())

  quantity Int
  price Int

  order Order? @relation(fields: [orderId], references: [id])
  orderId String? @map("order_id")

  product Product? @relation(fields: [productId], references: [id])
  productId String @map("product_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("order_items")
}

enum Role {
  ADMIN
  USER
}